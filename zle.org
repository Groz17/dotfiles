#+property: header-args :tangle (concat (getenv "XDG_CONFIG_HOME") "/zsh/zle.zsh")
#+startup: content

* ZLE Configuration (Zsh Line Editor)
Converted from inputrc.org - Zsh equivalents for readline keybindings.

* Options
#+begin_src sh
# Completion options
autoload -Uz compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'  # case-insensitive
setopt COMPLETE_IN_WORD
setopt AUTO_MENU
setopt LIST_AMBIGUOUS

# Colored completion
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu select
#+end_src

* Keybindings
** Base Mode
#+begin_src sh
# Default to emacs mode
bindkey -e
#+end_src

** Tab Completion
#+begin_src sh
# Tab - menu completion
bindkey '^I' expand-or-complete-prefix
#+end_src

** Line Editing
#+begin_src sh
# Ctrl+X Ctrl+K - kill whole line
bindkey '^X^K' kill-whole-line

# Ctrl+1 maps to Alt+1
bindkey -s '^1' '\e1'
#+end_src

** Meta Commands
#+begin_src sh
# Ctrl+X Ctrl+X - reload shell
bindkey -s '^X^X' ' [[ $(jobs) ]] || exec ${SHELL:-/bin/zsh}\n'

# Ctrl+X \ - nohist (if you have this function)
# bindkey -s '^X\\' ' nohist\n'
#+end_src

** Wrapping
#+begin_src sh
# Ctrl+X $ - wrap in $()
bindkey -s '^X$' ' $()\e[D'

# Ctrl+X < - wrap in <()
bindkey -s '^X<' ' <()\e[D'

# Ctrl+X " - wrap in double quotes
bindkey -s '^X"' ' ""\e[D'

# Ctrl+X ' - wrap in single quotes
bindkey -s "^X'" " ''\e[D"
#+end_src

** Redirections
#+begin_src sh
bindkey -s '^X0' ' &>/dev/null '
bindkey -s '^X1' ' >/dev/null '
bindkey -s '^X2' ' 2>/dev/null '
bindkey -s '^X3' ' 2>&1 '
#+end_src

** Emacs-Inspired Navigation
#+begin_src sh
# Ctrl+X Ctrl+F - find file with fzf
bindkey -s '^X^F' ' "$(fd -tf . 2>/dev/null | fzf)"\n'

# Ctrl+X d - find directory with fzf
bindkey -s '^Xd' ' "$(fd -td . 2>/dev/null | fzf)"\n'

# Ctrl+X Ctrl+J - open dired in emacs
bindkey -s '^X^J' ' emacsclient -a "" -t --eval '\''(dired ".")'\'''\n'

# Alt+X - command search with preview
bindkey -s '\ex' ' $(compgen -c | sort -u | grep -v ^_ | fzf --preview='\''man {} 2>/dev/null||echo "No preview available"'\'')\n'
#+end_src

** Vi/Emacs Mode Toggle
#+begin_src sh
# Alt+Ctrl+J - toggle between vi and emacs mode
_toggle_vi_emacs() {
  if [[ $KEYMAP == vicmd ]] || [[ $KEYMAP == viins ]]; then
    bindkey -e
    echo "Switched to emacs mode"
  else
    bindkey -v
    echo "Switched to vi mode"
  fi
  zle reset-prompt
}
zle -N _toggle_vi_emacs
bindkey '^[^J' _toggle_vi_emacs
#+end_src

** History Navigation
#+begin_src sh
# Enhanced history search
autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

# Ctrl+P/N - history navigation
bindkey '^P' up-line-or-beginning-search
bindkey '^N' down-line-or-beginning-search

# Alt+P/N - non-incremental history search
bindkey '\ep' history-search-backward
bindkey '\en' history-search-forward

# Ctrl+X Ctrl+N - dynamic history completion
bindkey '^X^N' _history-complete-older
#+end_src

** Special Keys
#+begin_src sh
# Ctrl+M - accept line (fix for ghostty)
bindkey '^M' accept-line

# Ctrl+X (mapped from F14 via kanata)
# bindkey '\e[24~' ... (if needed)
#+end_src

* TODO Tasks
- [ ] Test Alt+Ctrl+J for vi mode toggle
- [ ] Verify all Ctrl+X combinations work
- [ ] Add keybinding for common commands (analyze with atuin)
- [ ] Implement nohist function if needed
