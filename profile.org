#+property: header-args :tangle ~/.profile
* Environment variables
** XDG
Use =xdg-ninja=
#+begin_src sh
export XDG_DATA_HOME=$HOME/.local/share
export XDG_CONFIG_HOME=$HOME/.config
export XDG_STATE_HOME=$HOME/.local/state
export XDG_CACHE_HOME=$HOME/.cache
# doesn't work
# export XDG_SCREENSHOTS_DIR="$HOME/Pictures/Screenshots/"
# env = XDG_SCREENSHOTS_DIR,$HOME/Pictures/Screenshots

export CARGO_HOME="$XDG_DATA_HOME"/cargo
# export GNUPGHOME="$XDG_DATA_HOME"/gnupg
export W3M_DIR="$XDG_DATA_HOME"/w3m
export KUBECONFIG="$XDG_DATA_HOME"/kube

export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker
export FZF_DEFAULT_OPTS_FILE="$XDG_CONFIG_HOME"/fzfrc
export ZDOTDIR="$XDG_CONFIG_HOME"/zsh
# export INPUTRC="$HOME/.config/readline/inputrc"
#+end_src

** Preferred programs
#+begin_src sh
EDITORS=( "emacsclient -nw" nvim )
export EDITOR="${EDITORS[$((RANDOM%${#EDITORS[@]}))]}"
# make it so man with multiple arguments open vim with multiple buffers/quickfix
export MANPAGER="nvim +Man!"
# export MANWIDTH=999

export OLLAMA_API_BASE=http://127.0.0.1:11434
# export GPG_TTY=$(tty)
export ELECTRON_OZONE_PLATFORM_HINT=auto
# export QT_STYLE_OVERRIDE=Adwaita-Dark
# open in emacs?
# env = GRIMBLAST_EDITOR,photoflare
# Optionally, customize slurp's appearance
# env = SLURP_ARGS, -d -b -B F050F022 -b 10101022 -c ff00ff
# Can fix high cpu loads on some machines
# env = GRIMBLAST_HIDE_CURSOR, 0
#+end_src

** PATH
#+begin_src sh
export PATH="${CARGO_HOME}/bin:$PATH"
export PATH="${XDG_DATA_HOME}/nvim/mason/bin:$PATH"
export PATH="$HOME/node_modules/.bin:$PATH"
export PATH="$HOME/scripts:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="${XDG_DATA_HOME}/npm/bin:$PATH
#+end_src

# Language
#export LANG='en_AU.UTF-8'
#export LC_ALL=$LANG
#export LC_COLLATE=$LANG
#export LC_CTYPE=$LANG
#export LC_MESSAGES=$LANG
#export LC_MONETARY=$LANG
#export LC_NUMERIC=$LANG
#export LC_TIME=$LANG

* SSH_AGENT

#+begin_src sh
if [ -z "$SSH_AUTH_SOCK" ]; then
   # Check for a currently running instance of the agent
   RUNNING_AGENT="`ps -ax | grep 'ssh-agent -s' | grep -v grep | wc -l | tr -d '[:space:]'`"
   if [ "$RUNNING_AGENT" = "0" ]; then
        # Launch a new instance of the agent
        ssh-agent -s &> .ssh/ssh-agent
   fi
   eval `cat .ssh/ssh-agent`
fi
#+end_src
